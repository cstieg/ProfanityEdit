@model ProfanityEdit.Models.MakeXspfViewModel

@{
    ViewBag.Title = "Make Edited Movie";
}

<h2>Make Edited Movie</h2>

@using (Html.BeginForm("DownloadXspf", "Home", "Get"))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>User Preference Set</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EditListId)


        <div class="presets form-group">
            <div class="control-label col-md-2">Presets:</div>
            <div class="col-md-10">
                <div class="radio">
                    @foreach (var preset in ViewBag.PreferenceSetPresets)
                    {
                        <input type="radio" name="preset" value="@preset.Id"
                               onclick="hideClass('customPreferences')" />@preset.Description<br />
                    }
                    <br />
                    <input type="radio" name="preset" value="Custom" onclick="showClass('customPreferences')" />Custom:
                </div>

            </div>

        </div>
        
        <div class="customPreferences hidden">
            @foreach (var userPreferenceItem in Model.UserPreferenceItems)
            {
                @Html.Partial("_UserPreferenceItemPartial", userPreferenceItem)
            }
        </div>
        <hr />

        <div class="form-group">
            @Html.LabelFor(model => model.SkipAudio, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SkipAudio)
                    @Html.ValidationMessageFor(model => model.SkipAudio, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SkipVideo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.SkipVideo)
                    @Html.ValidationMessageFor(model => model.SkipVideo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Download Edited Movie Playlist" class="btn btn-default" />
            </div>
        </div>
    </div>

}